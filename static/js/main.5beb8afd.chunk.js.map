{"version":3,"sources":["components/Card/Card.js","components/card-list/Cardlist.js","components/search-box/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","Cardlist","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMoster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAaeA,MAXf,SAAcC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,KAChF,6BAAKL,EAAMG,QAAQG,OACnB,6BAAKN,EAAMG,QAAQI,YCUhBC,MAdf,SAAkBR,GAEd,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAACP,GAAD,OACf,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,U,MCCxBO,MARf,YAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC9B,OACI,8BACI,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,OCyCzEG,E,kDAvCb,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,gEASO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,+BAMnC,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YAEZU,EAAiBpB,EAASqB,QAAO,SAAA3B,GAAO,OAAIA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAIlG,OACE,sBAAK9B,UAAU,MAAf,UAEE,iDACA,cAAC,EAAD,CAAQW,YAAY,iBAAiBC,aAAce,KAAKf,eAExD,cAAC,EAAD,CAAUJ,SAAUoB,W,GAjCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5beb8afd.chunk.js","sourcesContent":["import React from 'react'\nimport './Card.css'\nfunction Card(props) {\n    return (\n        <div className=\"card-container\">\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"\" />\n            <h2>{props.monster.name}</h2>\n            <h4>{props.monster.email}</h4>\n\n        </div >\n    )\n}\n\nexport default Card;","import React from 'react'\nimport '../card-list/Cardlist.css'\nimport Card from '../Card/Card'\nfunction Cardlist(props) {\n\n    return (\n        <div className='card-list'>\n            {\n                props.monsters.map((monster) => (\n                    <Card key={monster.id} monster={monster} />\n\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Cardlist;","import React from 'react'\nimport './SearchBox.css'\nfunction SearchBox({ placeholder, handleChange }) {\n    return (\n        <div>\n            <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange} />\n        </div>\n    )\n}\n\nexport default SearchBox;","import React, { Component } from 'react'\nimport './App.css';\nimport Cardlist from './components/card-list/Cardlist'\nimport Search from './components/search-box/SearchBox'\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    }\n\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n\n    const filteredMoster = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n\n    // e => this.setState({ searchField: e.target.value })\n    return (\n      <div className=\"App\" >\n\n        <h1>Monster Rolodex</h1>\n        <Search placeholder=\"search monster\" handleChange={this.handleChange} />\n\n        <Cardlist monsters={filteredMoster} />\n\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}